#!/usr/bin/env ruby
require 'rubygems'
require 'kafo'
require 'tempfile'

class ForemanProxyCertsGenerate
  INSTALLER_DIR = '.'

  attr_reader :answers_file, :config_file

  def initialize
    @answers_file = generate_answers_file
    @config_file = generate_config_file
  end

  def cleanup
    answers_file.unlink
    config_file.unlink
  end

  private

  # rubocop: disable Metrics/MethodLength
  def generate_answers_file
    if File.file?('./config/last_scenario.yaml')
      scenario = YAML.load_file('./config/last_scenario.yaml').fetch(:answer_file)
      organization = YAML.load_file("#{scenario}")['foreman']['initial_organization'] rescue "Default Organization"
    else
      organization = "Default Organization"
    end
    temp_file('foreman-proxy-certs-answer',
              <<-EOF
                certs:
                  generate: true
                  deploy: false
                  group: foreman
                  org: #{organization.tr(' ', '_')}
                foreman_proxy_certs: true
              EOF
             )
  end

  def generate_config_file
    temp_file('foreman-proxy-certs-config',
              <<-EOF
                :log_level: :debug
                :log_dir: /var/log
                :log_name: foreman-proxy-certs-generate.log
                :no_prefix: true
                :answer_file: #{answers_file.path}
                :installer_dir: #{INSTALLER_DIR}
                :installer_name: 'foreman-installer'
                :module_dirs:
                  - "./_build/modules"
                  - "#{INSTALLER_DIR}/modules"
                  - "/usr/share/foreman-installer/modules"
                  - "/usr/share/katello-installer-base/modules"
                :hook_dirs: ["#{INSTALLER_DIR}/hooks"]
                :parser_cache_path: '/usr/share/katello-installer-base/parser_cache/foreman-proxy-certs-generate.yaml'
                :default_values_dir: /tmp
                :dont_save_answers: true
                :mapping:
                  :foreman_proxy_certs:
                    :manifest_name: foreman_proxy_content
                    :dir_name: certs
                :order:
                  - certs
                  - foreman_proxy_certs
              EOF
             )
  end

  def temp_file(name, content)
    file = Tempfile.open([name, '.yaml'])
    file.write(content)
    file.close
    file
  end
end

if $0 == __FILE__
  begin
    gen = ForemanProxyCertsGenerate.new
    CONFIG_FILE = gen.config_file.path
    Kafo::KafoConfigure.run
  ensure
    gen.cleanup
  end
  Kafo::KafoConfigure.exit_code == 2 ? exit(0) : exit(Kafo::KafoConfigure.exit_code)
end
