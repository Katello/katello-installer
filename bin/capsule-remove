#!/bin/bash

for var in $@; do
   if [[ $var == "--help" || $var == "-h" ]]
       then echo -e "This script is used to remove all capsule related packages and services. \nThis should only be used if you are sure you are wanting to completly remove Capsule from this machine and lose all of your settings and synced content."
       exit 1
   fi
done

echo ""
echo "WARNING: This script will erase many packages and config files."
echo "Important packages such as the following will be removed:"
echo ""
echo "  * httpd (apache)"
echo "  * mongodb"
echo "  * tomcat"
echo "  * puppet"
echo "  * ruby"
echo "  * rubygems"
echo "  * All Katello and Foreman Packages"
echo ""
echo "Once these packages and configuration files are removed there is no going back."
echo "If you use this system for anything other than Katello and Foreman you probably"
echo "do not want to execute this script."
echo ""
read -p "Read the source for a list of what is removed.  Are you sure(Y/N)? " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    echo "** cancelled **"
    exit 1
fi

echo ""
echo "ARE YOU SURE?: This script permanently deletes data and configuration."
read -p "Read the source for a list of what is removed.  Type [remove] to continue? " -r
echo    # (optional) move to a new line
if [[ ! $REPLY = remove ]]
then
    echo "** cancelled **"
    exit 1
fi

CONFIG_FILES=(
    /etc/pulp/
    /usr/share/caspule-installer/
    /usr/share/foreman
    /usr/share/foreman-installer
    /usr/share/foreman-installer-katello
    /usr/share/katello-installer-base
    /var/lib/puppet/
    /var/lib/mongodb/
    /var/lib/pulp/
    /etc/httpd/
    /usr/share/pulp
    /etc/foreman-proxy
    /var/lib/foreman-proxy
    /etc/capsule-installer
    /etc/foreman-installer
    /etc/foreman-proxy/
    /etc/puppet/environments
    /etc/pki/katello-certs-tools
    /etc/crane.conf
    /etc/mongod.conf
    /var/www/html/pub/bootstrap.py
    /var/www/html/pub/katello-rhsm-consumer
    /var/lib/hiera
    /var/lib/qpidd
    /usr/share/qpid-tools
    /etc/puppet
    /etc/qpid-dispatch
    /etc/hiera.yaml
    /etc/squid
    /etc/qpid
    /var/www/html/pub/katello-server-ca.crt
)

LOG_FILES=(
    /var/log/capsule-installer/
    /var/log/pulp/
    /var/log/httpd/
    /var/log/mongodb/
    /var/log/foreman-proxy
    /var/log/foreman-installer
    /var/log/squid
)

# Setting a variable to make sure we actually grab the FQDN of the capsule incase there are other packages that have a short hostname in them.

FQDN=$( hostname -f)

RPMS=(
    `rpm -qa | grep puppetlabs-release`
    `rpm -qa | grep foreman-release`
    `rpm -qa | grep foreman-client`
    `rpm -qa | grep ^foreman-installer`
    `rpm -qa | grep ^katello-installer`
    `rpm -qa | grep foreman-proxy`
    `rpm -qa | grep katello`
    `rpm -qa | grep ^pulp`
    `rpm -qa | grep ^python-pulp`
    `rpm -qa | grep ^pulp-`
    `rpm -qa | grep mongo`
    `rpm -qa | grep ^mod_`
    `rpm -qa | grep ^rubygem`
    `rpm -qa | grep ^ruby193`
    `rpm -qa | grep ^foreman`
    `rpm -qa | grep ^qpid`
    `rpm -qa | grep ^lucene`
    `rpm -qa | grep ^python-crane`
    `rpm -qa | grep ^python-celery`
    `rpm -qa | grep ^python-gofer`
    `rpm -qa | grep ^python-qpid`
    `rpm -qa | grep ^python-kombu`
    `rpm -qa | grep ^python-webpy`
    `rpm -qa | grep ^python-nectar`
    `rpm -qa | grep ^python-saslwrapper`
    `rpm -qa | grep ^python-amqp`
    `rpm -qa | grep ^python-billiard`
    `rpm -qa | grep ^python-semantic-version`
    `rpm -qa | grep ^python-requests`
    `rpm -qa | grep ^python-isodate`
    `rpm -qa | grep gutterball`
    `rpm -qa | grep $FQDN`
    saslwrapper
    snappy-java
    ruby
    rubygems
    httpd
    puppet
    squid
)

CERT_FILES=(
    /etc/pki/pulp/
    /etc/pki/katello
    /root/ssl-build
    /var/www/html/pub/katello-ca*.rpm
)

# stopping all katello/foreman related services

katello-service stop

echo "Removing RPMs"
yum erase -y ${RPMS[*]}

echo "Cleaning up configuration files"
rm -rf ${CONFIG_FILES[*]}

echo "Cleaning up log files"
# logs
rm -rf ${LOG_FILES[*]}

echo "Cleaning up Certs"
# pulp cert stuff
rm -rf ${CERT_FILES[*]}
