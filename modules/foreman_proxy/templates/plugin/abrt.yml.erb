---
:enabled: <%= @module_enabled %>
# Log file for the forwarding script.
:abrt_send_log_file: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::abrt_send_log_file') %>
# Directory where uReports are stored before they are sent
:spooldir: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::spooldir') %>
# Merge duplicate reports before sending (requires the satyr gem)
:aggregate_reports: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::aggregate_reports') %>
# Period (in seconds) after which collected reports are forwarded. Meaningful
# only if smart-proxy-abrt-send is run as a daemon (not from cron).
:send_period: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::send_period') %>
# FAF server instance the reports will be forwarded to (optional)
<% if [nil, :undefined, :undef].include?(scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_url')) -%>
#:server_url: 
# Set to true if FAF server uses self-signed certificate
#:server_ssl_noverify: 
<% else %>
:server_url: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_url') %>
# Set to true if FAF server uses self-signed certificate
:server_ssl_noverify: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_ssl_noverify') %>
<% end %>
# Following two options enable client authentication to FAF server
<% if [nil, :undefined, :undef].include?(scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_ssl_cert')) \
        || scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_ssl_cert').empty? \
        || [nil, :undefined, :undef].include?(scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_ssl_key')) \
        || scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_ssl_key').empty? -%>
#:server_ssl_cert: 
#:server_ssl_key: 
<% else %>
:server_ssl_cert: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_ssl_cert') %>
:server_ssl_key: <%= scope.lookupvar('::foreman_proxy::plugin::abrt::faf_server_ssl_key') %>
<% end %>
