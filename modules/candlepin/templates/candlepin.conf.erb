### File managed with puppet ###
## Module: '<%= scope.to_hash['module_name'] %>'

<% unless [nil, :undefined, :undef].include?(scope.lookupvar("candlepin::consumer_system_name_pattern")) -%>
candlepin.consumer_system_name_pattern=<%= @consumer_system_name_pattern %>
<%- end -%>
candlepin.environment_content_filtering=<%= scope['candlepin::env_filtering_enabled'] %>
candlepin.auth.basic.enable=<%= scope['candlepin::enable_basic_auth'] %>
candlepin.auth.trusted.enable=<%= scope['candlepin::enable_trusted_auth'] %>

<% if scope['candlepin::amq_enable'] -%>
# enable events via AMQP
candlepin.amqp.enable=true
candlepin.amqp.connect=<%= scope['candlepin::amqpurl'] %>
candlepin.amqp.keystore=<%= scope['candlepin::amqp_keystore'] %>
candlepin.amqp.keystore_password=<%= scope['candlepin::amqp_keystore_password'] %>
candlepin.amqp.truststore_password=<%= scope['candlepin::amqp_truststore_password'] %>
candlepin.amqp.truststore=<%= scope['candlepin::amqp_truststore'] %>
<%- end -%>

<% if scope['candlepin::oauth_key'] != "" -%>
candlepin.auth.oauth.enable=true
candlepin.auth.oauth.consumer.<%= scope['candlepin::oauth_key'] %>.secret=<%= scope['candlepin::oauth_secret'] %>
<%- end -%>

<% unless [nil, :undefined, :undef].include?(scope.lookupvar("candlepin::adapter_module")) -%>
module.config.adapter_module=<%= scope['candlepin::adapter_module'] %>
<%- end -%>

candlepin.ca_key=<%= scope['candlepin::ca_key'] %>
candlepin.ca_cert=<%= scope['candlepin::ca_cert'] %>
candlepin.crl.file=<%= scope['candlepin::crl_file'] %>
<% unless [nil, :undefined, :undef].include?(scope.lookupvar("candlepin::ca_key_password")) -%>
candlepin.ca_key_password=<%= scope['candlepin::ca_key_password'] %>
<%- end -%>
